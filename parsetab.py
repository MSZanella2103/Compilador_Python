
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'BEGIN END ID Numero OPERADOR PRINT VAR abre_parenteses divide fecha_parenteses igual mais menos ponto pontovirgula vezes virgula\n    program : VAR var_declaration_part BEGIN statement_part END ponto\n    \n    var_declaration_part : var_declaration_part var_declaration pontovirgula\n                         | var_declaration pontovirgula\n                         |\n    \n    var_declaration : ID virgula ID\n                    | ID\n    \n    statement_part : statement_part statement pontovirgula\n                   | statement pontovirgula\n                   |\n    \n    statement : assignment\n              | compound_statement\n              | print_statement\n    \n    assignment : ID igual expression\n    \n    expression : term\n               | expression mais term\n               | expression menos term\n    \n    term : factor\n         | term vezes factor\n         | term divide factor\n    \n    factor : ID\n           | Numero\n           | abre_parenteses expression fecha_parenteses\n    \n    compound_statement : BEGIN statement_part END\n    \n    print_statement : PRINT expression\n    '
    
_lr_action_items = {'VAR':([0,],[2,]),'$end':([1,32,],[0,-1,]),'BEGIN':([2,3,6,8,10,11,18,20,23,33,],[-4,6,10,-3,10,10,-2,10,-8,-7,]),'ID':([2,3,6,8,9,10,11,17,18,20,23,24,30,33,35,36,37,38,],[5,5,16,-3,19,16,16,28,-2,16,-8,28,28,-7,28,28,28,28,]),'pontovirgula':([4,5,7,12,13,14,15,19,22,25,26,27,28,29,31,34,40,41,42,43,44,],[8,-6,18,23,-10,-11,-12,-5,33,-24,-14,-17,-20,-21,-23,-13,-15,-16,-18,-19,-22,]),'virgula':([5,],[9,]),'END':([6,10,11,20,23,33,],[-9,-9,21,31,-8,-7,]),'PRINT':([6,10,11,20,23,33,],[17,17,17,17,-8,-7,]),'igual':([16,],[24,]),'Numero':([17,24,30,35,36,37,38,],[29,29,29,29,29,29,29,]),'abre_parenteses':([17,24,30,35,36,37,38,],[30,30,30,30,30,30,30,]),'ponto':([21,],[32,]),'mais':([25,26,27,28,29,34,39,40,41,42,43,44,],[35,-14,-17,-20,-21,35,35,-15,-16,-18,-19,-22,]),'menos':([25,26,27,28,29,34,39,40,41,42,43,44,],[36,-14,-17,-20,-21,36,36,-15,-16,-18,-19,-22,]),'fecha_parenteses':([26,27,28,29,39,40,41,42,43,44,],[-14,-17,-20,-21,44,-15,-16,-18,-19,-22,]),'vezes':([26,27,28,29,40,41,42,43,44,],[37,-17,-20,-21,37,37,-18,-19,-22,]),'divide':([26,27,28,29,40,41,42,43,44,],[38,-17,-20,-21,38,38,-18,-19,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'var_declaration_part':([2,],[3,]),'var_declaration':([2,3,],[4,7,]),'statement_part':([6,10,],[11,20,]),'statement':([6,10,11,20,],[12,12,22,22,]),'assignment':([6,10,11,20,],[13,13,13,13,]),'compound_statement':([6,10,11,20,],[14,14,14,14,]),'print_statement':([6,10,11,20,],[15,15,15,15,]),'expression':([17,24,30,],[25,34,39,]),'term':([17,24,30,35,36,],[26,26,26,40,41,]),'factor':([17,24,30,35,36,37,38,],[27,27,27,27,27,42,43,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> VAR var_declaration_part BEGIN statement_part END ponto','program',6,'p_program','analisador_lexico_v3.py',67),
  ('var_declaration_part -> var_declaration_part var_declaration pontovirgula','var_declaration_part',3,'p_var_declaration_part','analisador_lexico_v3.py',73),
  ('var_declaration_part -> var_declaration pontovirgula','var_declaration_part',2,'p_var_declaration_part','analisador_lexico_v3.py',74),
  ('var_declaration_part -> <empty>','var_declaration_part',0,'p_var_declaration_part','analisador_lexico_v3.py',75),
  ('var_declaration -> ID virgula ID','var_declaration',3,'p_var_declaration','analisador_lexico_v3.py',80),
  ('var_declaration -> ID','var_declaration',1,'p_var_declaration','analisador_lexico_v3.py',81),
  ('statement_part -> statement_part statement pontovirgula','statement_part',3,'p_statement_part','analisador_lexico_v3.py',86),
  ('statement_part -> statement pontovirgula','statement_part',2,'p_statement_part','analisador_lexico_v3.py',87),
  ('statement_part -> <empty>','statement_part',0,'p_statement_part','analisador_lexico_v3.py',88),
  ('statement -> assignment','statement',1,'p_statement','analisador_lexico_v3.py',93),
  ('statement -> compound_statement','statement',1,'p_statement','analisador_lexico_v3.py',94),
  ('statement -> print_statement','statement',1,'p_statement','analisador_lexico_v3.py',95),
  ('assignment -> ID igual expression','assignment',3,'p_assignment','analisador_lexico_v3.py',100),
  ('expression -> term','expression',1,'p_expression','analisador_lexico_v3.py',105),
  ('expression -> expression mais term','expression',3,'p_expression','analisador_lexico_v3.py',106),
  ('expression -> expression menos term','expression',3,'p_expression','analisador_lexico_v3.py',107),
  ('term -> factor','term',1,'p_term','analisador_lexico_v3.py',112),
  ('term -> term vezes factor','term',3,'p_term','analisador_lexico_v3.py',113),
  ('term -> term divide factor','term',3,'p_term','analisador_lexico_v3.py',114),
  ('factor -> ID','factor',1,'p_factor','analisador_lexico_v3.py',119),
  ('factor -> Numero','factor',1,'p_factor','analisador_lexico_v3.py',120),
  ('factor -> abre_parenteses expression fecha_parenteses','factor',3,'p_factor','analisador_lexico_v3.py',121),
  ('compound_statement -> BEGIN statement_part END','compound_statement',3,'p_compound_statement','analisador_lexico_v3.py',126),
  ('print_statement -> PRINT expression','print_statement',2,'p_print_statement','analisador_lexico_v3.py',131),
]
